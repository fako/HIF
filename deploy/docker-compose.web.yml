version: '3.3'


services:

  datascope:
    image: eu.gcr.io/datascope-266618/datascope:${RELEASE_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 0.5G
      restart_policy:
        condition: any
    depends_on:
      - "postgres"
      - "redis"
    healthcheck:
      test: curl -sS http://localhost:8000/health/?docker=1 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_MODE=${DJANGO_MODE}
      - INVOKE_DJANGO_DEBUG=${INVOKE_DJANGO_DEBUG}
      - INVOKE_POSTGRES_CREDENTIALS=${INVOKE_POSTGRES_CREDENTIALS}
    ports:
      - "8000:8000"

  tasks:
    image: eu.gcr.io/datascope-266618/datascope:${RELEASE_VERSION}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 0.5G
      restart_policy:
        condition: any
    command: celery -A datascope worker --loglevel=info
    depends_on:
      - "postgres"
      - "redis"
    labels:
      nl.surfpol.tasks: "tasks"
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_MODE=${DJANGO_MODE}
      - INVOKE_DJANGO_DEBUG=${INVOKE_DJANGO_DEBUG}
      - INVOKE_POSTGRES_CREDENTIALS=${INVOKE_POSTGRES_CREDENTIALS}
    volumes:
      - /srv/data:/usr/src/data

  postgres:
    image: postgres:10.10
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1G
      restart_policy:
        condition: any
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: postgres
      POSTGRES_DB: datascope
      PGDATA: /var/lib/postgresql/data/pgdata
      DJANGO_POSTGRES_PASSWORD: ${DJANGO_POSTGRES_PASSWORD}
    volumes:
      - ./postgres/conf/postgresql.conf:/etc/postgresql/postgresql.conf
      - postgres-data:/var/lib/postgresql/data/pgdata
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    labels:
      nl.surfpol.db: "postgres"

  redis:
    image: redis
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 0.25G
      restart_policy:
        condition: any
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.3
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1.75G
      restart_policy:
        condition: any
    environment:
      - node.name=elastic
      - discovery.type=single-node
      - cluster.name=elastic
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data

  nginx:
    image: nginx
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 0.25G
      restart_policy:
        condition: any
    volumes:
      - ./server/nginx/templates:/etc/nginx/templates
      - ./server/nginx/uwsgi-pass.conf:/etc/nginx/uwsgi-pass.conf
    depends_on:
      - "postgres"
      - "datascope"
    ports:
      - "80:80"

volumes:
  postgres-data:
  elastic-data:
